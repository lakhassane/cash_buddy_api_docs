{
  "openapi": "3.0.0",
  "info": {
    "title": "Cash Buddy API",
    "version": "1.0.0",
    "description": "API documentation for Cash Buddy app"
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "expiresIn": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        },
                        "expiresIn": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/api/auth": {
      "get": {
        "summary": "Get authenticated user details",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/pots": {
      "get": {
        "summary": "Get all pots for user",
        "tags": [
          "Pots"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of pots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pot"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new pot",
        "tags": [
          "Pots"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created pot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pot"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/pots/{id}": {
      "get": {
        "summary": "Get a pot by ID",
        "tags": [
          "Pots"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pot details with transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pot"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Pot not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update pot name",
        "tags": [
          "Pots"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated pot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pot"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Pot not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a pot",
        "tags": [
          "Pots"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pot removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete pot with non-zero balance"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Pot not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/pots/emergency-fund/set": {
      "post": {
        "summary": "Create an emergency fund",
        "tags": [
          "Pots"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "monthlyExpenses",
                  "coverageMonths"
                ],
                "properties": {
                  "monthlyExpenses": {
                    "type": "number"
                  },
                  "coverageMonths": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Emergency fund details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pot": {
                      "$ref": "#/components/schemas/EmergencyFund"
                    },
                    "targetAmount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or multiple emergency funds"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/pots/emergency-fund/progress": {
      "get": {
        "summary": "Get emergency fund progress",
        "tags": [
          "Pots"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Emergency fund progress",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currentBalance": {
                      "type": "number"
                    },
                    "targetAmount": {
                      "type": "number"
                    },
                    "percentage": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Emergency fund not set up"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "summary": "Create a new transaction",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "date",
                  "pot",
                  "type"
                ],
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "pot": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "deposit",
                      "withdrawal"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or insufficient funds"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Pot not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "get": {
        "summary": "Get all transactions",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/transactions/{id}": {
      "get": {
        "summary": "Get a transaction by ID",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "summary": "Update a transaction",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "date",
                  "pot",
                  "type"
                ],
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "pot": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "deposit",
                      "withdrawal"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or insufficient funds"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a transaction",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Transaction or pot not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/transactions/breakdown/{year}/{month}": {
      "get": {
        "summary": "Get income vs expense breakdown for a month",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monthly breakdown",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "income": {
                      "type": "number"
                    },
                    "expenses": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/transactions/breakdown/{year}": {
      "get": {
        "summary": "Get income vs expense breakdown for the year to date",
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Yearly breakdown",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "income": {
                      "type": "number"
                    },
                    "expenses": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pot": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          },
          "user": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "EmergencyFund": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pot"
          },
          {
            "type": "object",
            "properties": {
              "monthlyExpenses": {
                "type": "number"
              },
              "coverageMonths": {
                "type": "number"
              }
            }
          }
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "pot": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "deposit",
              "withdrawal"
            ]
          },
          "user": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": []
}
